[{"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\index.js":"1","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\App.js":"2","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\reportWebVitals.js":"3","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostList.js":"4","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\Post.js":"5","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostForm.js":"6","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostProvider.js":"7","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostSearch.js":"8"},{"size":547,"mtime":1610554429446,"results":"9","hashOfConfig":"10"},{"size":453,"mtime":1610569243145,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":844,"mtime":1610581828851,"results":"13","hashOfConfig":"10"},{"size":828,"mtime":1610582305209,"results":"14","hashOfConfig":"10"},{"size":2999,"mtime":1610568545580,"results":"15","hashOfConfig":"10"},{"size":1129,"mtime":1610570738979,"results":"16","hashOfConfig":"10"},{"size":607,"mtime":1610569966729,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"mmdwzw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\index.js",[],["37","38"],"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\App.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\reportWebVitals.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostList.js",["39","40","41"],"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\Post.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostForm.js",["42"],"import React, { useState, useContext } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, Col } from \"reactstrap\";\r\nimport { PostContext } from \"./PostProvider\";\r\n\r\nconst PostForm = () => {\r\n  const { addPost } = useContext(PostContext);\r\n  const [post, setPost] = useState({});\r\n\r\n  const handleControlledInputChange = (event) => {\r\n    const newPost = { ...post };\r\n    newPost[event.target.name] = event.target.value;\r\n    setPost(newPost);\r\n  };\r\n\r\n  const handleClickNewPost = (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      post.title === \"\" ||\r\n      post.imageUrl === \"\" ||\r\n      post.dateCreated === null\r\n    ) {\r\n      window.alert(\"Please fill in required fields\");\r\n    } else {\r\n      addPost({\r\n        title: post.title,\r\n        imageUrl: post.imageUrl,\r\n        dateCreated: post.dateCreated,\r\n        caption: post.caption ? post.caption : null,\r\n        userProfileId: 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"mt-5\">Add a Post</h3>\r\n      <div className=\"container w-50 card mb-5\">\r\n        <Form className=\"p-3\">\r\n          <FormGroup row>\r\n            <Label for=\"title\" sm={2}>\r\n              Title\r\n            </Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                onChange={handleControlledInputChange}\r\n                name=\"title\"\r\n                type=\"text\"\r\n                id=\"postTitle\"\r\n                required\r\n                autoFocus\r\n                className=\"form-control\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"imageUrl\" className=\"text-left\" sm={4}>\r\n              Url Image\r\n            </Label>\r\n            <Col sm={8}>\r\n              <Input\r\n                onChange={handleControlledInputChange}\r\n                name=\"imageUrl\"\r\n                type=\"text\"\r\n                name=\"imageUrl\"\r\n                id=\"imageUrl\"\r\n                placeholder=\"Url\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label className=\"text-left\" for=\"caption\" sm={4}>\r\n              Date Created\r\n            </Label>\r\n            <Col sm={8}>\r\n              <Input\r\n                onChange={handleControlledInputChange}\r\n                type=\"date\"\r\n                name=\"dateCreated\"\r\n                id=\"dateCreated\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label className=\"text-left\" for=\"caption\" sm={4}>\r\n              Caption\r\n            </Label>\r\n            <Col sm={8}>\r\n              <Input\r\n                onChange={handleControlledInputChange}\r\n                type=\"caption\"\r\n                name=\"caption\"\r\n                id=\"caption\"\r\n                placeholder=\"Caption\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <Button onClick={handleClickNewPost}>Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default PostForm;\r\n","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostProvider.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostSearch.js",["43","44"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { PostContext } from \"./PostProvider\";\r\nimport { Input } from \"reactstrap\";\r\n\r\nexport const PostSearch = () => {\r\n  const { setSearchTerms } = useContext(PostContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <Input\r\n            type=\"text\"\r\n            className=\"w-50\"\r\n            onKeyUp={(event) => setSearchTerms(event.target.value)}\r\n            placeholder=\"Search for an post... \"\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":28,"nodeType":"51","messageId":"52","endLine":1,"endColumn":36},{"ruleId":"53","severity":1,"message":"54","line":14,"column":6,"nodeType":"55","endLine":14,"endColumn":19,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":25,"column":15,"nodeType":"59","endLine":25,"endColumn":39},{"ruleId":"57","severity":1,"message":"58","line":64,"column":17,"nodeType":"59","endLine":64,"endColumn":32},{"ruleId":"49","severity":1,"message":"60","line":1,"column":29,"nodeType":"51","messageId":"52","endLine":1,"endColumn":38},{"ruleId":"49","severity":1,"message":"50","line":1,"column":40,"nodeType":"51","messageId":"52","endLine":1,"endColumn":48},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getPosts' and 'searchPosts'. Either include them or remove the dependency array.","ArrayExpression",["63"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [getPosts, searchPosts, searchTerms]",{"range":"66","text":"67"},[388,401],"[getPosts, searchPosts, searchTerms]"]