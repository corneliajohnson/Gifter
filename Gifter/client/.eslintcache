[{"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\index.js":"1","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\App.js":"2","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\reportWebVitals.js":"3","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostList.js":"4","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\Post.js":"5","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostForm.js":"6","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostProvider.js":"7","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostSearch.js":"8","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\ApplicationViews.js":"9","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\Header.js":"10","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostDetails.js":"11","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\UserPosts.js":"12"},{"size":694,"mtime":1610726716288,"results":"13","hashOfConfig":"14"},{"size":384,"mtime":1610641105828,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":834,"mtime":1610641600582,"results":"17","hashOfConfig":"14"},{"size":531,"mtime":1610645739521,"results":"18","hashOfConfig":"14"},{"size":2623,"mtime":1610642044978,"results":"19","hashOfConfig":"14"},{"size":1401,"mtime":1610645078071,"results":"20","hashOfConfig":"14"},{"size":590,"mtime":1610647300582,"results":"21","hashOfConfig":"14"},{"size":1108,"mtime":1610727476875,"results":"22","hashOfConfig":"14"},{"size":991,"mtime":1610647119788,"results":"23","hashOfConfig":"14"},{"size":957,"mtime":1610646000577,"results":"24","hashOfConfig":"14"},{"size":931,"mtime":1610646321480,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mmdwzw",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\index.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\App.js",[],["56","57"],"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\reportWebVitals.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostList.js",["58","59"],"import React, { useEffect, useContext } from \"react\";\r\nimport { PostContext } from \"./PostProvider\";\r\nimport Post from \"./Post\";\r\n\r\nconst PostList = () => {\r\n  const { posts, getPosts, searchTerms, searchPosts } = useContext(PostContext);\r\n\r\n  useEffect(() => {\r\n    if (searchTerms !== \"\") {\r\n      searchPosts(searchTerms, true);\r\n    } else {\r\n      getPosts();\r\n    }\r\n  }, [searchTerms]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"cards-column\">\r\n          {posts.map((post) => (\r\n            <Post\r\n              key={post.id}\r\n              post={post}\r\n              comments={post.comments}\r\n              comments={post.comments}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\Post.js",["60"],"import React from \"react\";\r\nimport { Card, CardImg, CardBody } from \"reactstrap\";\r\nimport { Link, ListGroupItem } from \"react-router-dom\";\r\n\r\nconst Post = ({ post }) => {\r\n  return (\r\n    <Card className=\"m-4\">\r\n      <p className=\"text-left px-2\">Posted by: {post.userProfile.name}</p>\r\n      <CardImg top src={post.imageUrl} alt={post.title} />\r\n      <CardBody>\r\n        <Link to={`/posts/${post.id}`}>\r\n          <strong>{post.title}</strong>\r\n        </Link>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostForm.js",["61"],"import React, { useState, useContext } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, Col } from \"reactstrap\";\r\nimport { PostContext } from \"./PostProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PostForm = () => {\r\n  const { addPost } = useContext(PostContext);\r\n  const [post, setPost] = useState({});\r\n\r\n  const history = useHistory();\r\n\r\n  const handleControlledInputChange = (event) => {\r\n    const newPost = { ...post };\r\n    newPost[event.target.name] = event.target.value;\r\n    setPost(newPost);\r\n  };\r\n\r\n  const handleClickNewPost = (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      post.title === \"\" ||\r\n      post.imageUrl === \"\" ||\r\n      post.dateCreated === null\r\n    ) {\r\n      window.alert(\"Please fill in required fields\");\r\n    } else {\r\n      addPost({\r\n        title: post.title,\r\n        imageUrl: post.imageUrl,\r\n        dateCreated: post.dateCreated,\r\n        userProfileId: 1,\r\n      }).then(() => history.push(\"/\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"mt-5\">Add a Post</h3>\r\n      <div className=\"container w-50 card mb-5\">\r\n        <Form className=\"p-3\">\r\n          <FormGroup row>\r\n            <Label for=\"title\" sm={2}>\r\n              Title\r\n            </Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                onChange={handleControlledInputChange}\r\n                name=\"title\"\r\n                type=\"text\"\r\n                id=\"postTitle\"\r\n                required\r\n                autoFocus\r\n                className=\"form-control\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"imageUrl\" className=\"text-left\" sm={4}>\r\n              Url Image\r\n            </Label>\r\n            <Col sm={8}>\r\n              <Input\r\n                onChange={handleControlledInputChange}\r\n                name=\"imageUrl\"\r\n                type=\"text\"\r\n                name=\"imageUrl\"\r\n                id=\"imageUrl\"\r\n                placeholder=\"Url\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label className=\"text-left\" for=\"caption\" sm={4}>\r\n              Date Created\r\n            </Label>\r\n            <Col sm={8}>\r\n              <Input\r\n                onChange={handleControlledInputChange}\r\n                type=\"date\"\r\n                name=\"dateCreated\"\r\n                id=\"dateCreated\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <Button onClick={handleClickNewPost}>Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default PostForm;\r\n","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostProvider.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostSearch.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\ApplicationViews.js",["62","63"],"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\Header.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\PostDetails.js",["64"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { PostContext } from \"./PostProvider\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport Post from \"./Post\";\r\n\r\nconst PostDetails = () => {\r\n  const { getPostById } = useContext(PostContext);\r\n  const [post, setPost] = useState();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    getPostById(id).then((post) => setPost(post));\r\n  }, []);\r\n\r\n  if (!post) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-sm-12 col-lg-6\">\r\n          <Post post={post} />\r\n          <ListGroup>\r\n            {post.comments.map((c) => (\r\n              <ListGroupItem key={c.id}>{c.message}</ListGroupItem>\r\n            ))}\r\n          </ListGroup>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDetails;\r\n","C:\\Users\\CJ\\workspace\\csharp\\Gifter\\Gifter\\client\\src\\components\\UserPosts.js",["65"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { PostContext } from \"./PostProvider\";\r\nimport Post from \"./Post\";\r\n\r\nexport const UserPosts = () => {\r\n  const { getPostByUserId } = useContext(PostContext);\r\n  const [userPost, setUserPost] = useState([]);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    getPostByUserId(id).then((post) => setUserPost(post));\r\n  }, []);\r\n\r\n  if (!userPost) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"mt-5\">{userPost[0]?.userProfile.name}'s Post</h2>\r\n      <div className=\"row justify-content-center\">\r\n        {userPost ? (\r\n          userPost.map((post) => (\r\n            <div className=\"col-6\">\r\n              <Post post={post} />{\" \"}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <h2>No Post</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":14,"column":6,"nodeType":"72","endLine":14,"endColumn":19,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":25,"column":15,"nodeType":"76","endLine":25,"endColumn":39},{"ruleId":"77","severity":1,"message":"78","line":3,"column":16,"nodeType":"79","messageId":"80","endLine":3,"endColumn":29},{"ruleId":"74","severity":1,"message":"75","line":66,"column":17,"nodeType":"76","endLine":66,"endColumn":32},{"ruleId":"81","severity":2,"message":"82","line":14,"column":10,"nodeType":"83","endLine":14,"endColumn":15},{"ruleId":"81","severity":2,"message":"84","line":18,"column":10,"nodeType":"83","endLine":18,"endColumn":18},{"ruleId":"70","severity":1,"message":"85","line":14,"column":6,"nodeType":"72","endLine":14,"endColumn":8,"suggestions":"86"},{"ruleId":"70","severity":1,"message":"87","line":13,"column":6,"nodeType":"72","endLine":13,"endColumn":8,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getPosts' and 'searchPosts'. Either include them or remove the dependency array.","ArrayExpression",["91"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'ListGroupItem' is defined but never used.","Identifier","unusedVar","react/jsx-no-undef","'Login' is not defined.","JSXIdentifier","'Register' is not defined.","React Hook useEffect has missing dependencies: 'getPostById' and 'id'. Either include them or remove the dependency array.",["92"],"React Hook useEffect has missing dependencies: 'getPostByUserId' and 'id'. Either include them or remove the dependency array.",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [getPosts, searchPosts, searchTerms]",{"range":"100","text":"101"},"Update the dependencies array to be: [getPostById, id]",{"range":"102","text":"103"},"Update the dependencies array to be: [getPostByUserId, id]",{"range":"104","text":"105"},[378,391],"[getPosts, searchPosts, searchTerms]",[476,478],"[getPostById, id]",[447,449],"[getPostByUserId, id]"]